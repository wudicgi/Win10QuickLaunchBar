<UserControl x:Class="QuickLaunchBar.QuickLaunchPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:QuickLaunchBar"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="800"
             x:Name="thisUserControl"
             Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <SolidColorBrush x:Key="BackgroundColorBrush">Red</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonMouseOverColorBrush">Green</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonMouseDownColorBrush">Blue</SolidColorBrush>

        <Thickness x:Key="ButtonPadding">3</Thickness>

        <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonMouseOverColorBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonMouseDownColorBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColorBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template" Value="{DynamicResource ButtonBaseControlTemplate}" />
        </Style>
    </UserControl.Resources>

    <StackPanel Orientation="Horizontal" Background="{DynamicResource BackgroundColorBrush}"
                x:Name="stackPanelMain">
        <StackPanel.ContextMenu>
            <ContextMenu>
                <MenuItem Header="打开 INI 配置文件" Click="MenuItemOpenIniFile_Click" />
                <MenuItem Header="重新加载配置" Click="MenuItemReloadAll_Click" />
            </ContextMenu>
        </StackPanel.ContextMenu>
        <Button>Test</Button>
    </StackPanel>
</UserControl>
